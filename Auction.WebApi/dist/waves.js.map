{"version":3,"sources":["../waves.js"],"names":[],"mappings":"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","file":"waves.js","sourcesContent":["/** {Seed}\n * phrase: 'sdfsddfghjkhgfsdghjfdsfghjfdsfghjfdsfdfdghkjfdg',\n * address: '3Mw4dkb7CPmh6bwFqr7v5LoXPime29ELGQP',\n * keyPair: {\n  *   privateKey: 'DSjuy5zbkDErmfq77RNYaytgMCBhryP5mieLbHugDSJm',\n  *   publicKey: '5C3YTBVyyMQoNecv9soynZ8GJd5b82g2auFaPWJearKW'\n  * }\n */\n\nlet waves = {\n    /** Авторизация\n     * @return {Seed}\n     */\n    auth(phrase) {\n        return Waves.Seed.fromExistingPhrase(phrase);\n    },\n\n    /** перевод\n     * @param {integer} amount\n     * @param {Seed} from\n     * @param {Seed} to\n     * @return {Object} transaction\n     */\n    operation(amount, from, to, attachment = '') {\n        let data = {\n            recipient: to.address,\n            assetId: 'WAVES',\n            amount,\n            feeAssetId: 'WAVES',\n            fee: Math.ceil(amount / 100),\n            attachment,\n            timestamp: Date.now()\n        };\n\n        return waves.balance(from)\n            .then(balance => {\n                if (balance < data.amount + data.fee) Promise.reject({error: 'недостаточно средств'});\n                return Waves.API.Node.v1.assets.transfer(data, from.keyPair);\n            })\n    },\n\n    /** Баланс\n     * @param {Seed} пользователь\n     */\n    balance(seed) {\n        return Waves.API.Node.v1.addresses.balance(seed.address)\n            .then(({balance}) => balance);\n    },\n\n    /** Статус транзакции\n     * @param {Object} transaction\n     * @return {Promise} void\n     */\n    status(transaction) {\n        if (!transaction || !transaction.id) return Promise.reject();\n        return Waves.API.Node.v1.transactions.get(transaction.id)\n            .then(_ => Promise.resolve())\n            .catch(_ => Promise.reject())\n    },\n\n    /** Перевод @API */\n    transfer(amount, from, to, attachment = '') {\n        return new Promise(function (resolve, reject) {\n            return waves.operation(amount, from, to, attachment)\n                .catch(error => console.log('Ошибка', error))\n                .then(waves.timer)\n                .then(transaction => resolve(transaction))\n                .catch(reject)\n        });\n    },\n\n    /**\n     * @param {any} transaction\n     * @returns\n     */\n    timer(transaction) {\n        console.log(transaction);\n        return new Promise(function (resolve, reject) {\n            let counter = 20;\n            timeout();\n\n            function timeout() {\n                waves.status(transaction)\n                    .then(_ => resolve(transaction))\n                    .catch(_ => {\n                        --counter;\n                        console.log(counter);\n                        if (counter === 0) reject(transaction);\n                        setTimeout(timeout, 10000);\n                    });\n            };\n        });\n    },\n\n    /**\n     * @param {Seed} user\n     * @param {array} transactions? {array of transactionID:string}\n     */\n    list(user, transactions = []) {\n        return Waves.API.Node.v1.transactions.getList(user.address)\n            .then(data => {\n                data = data[0];\n                if (transactions.length === 0) return data;\n                let list = data.filter(transaction => transactions.includes(transaction.id));\n                return list;\n            });\n    }\n};\n\n\n"]}