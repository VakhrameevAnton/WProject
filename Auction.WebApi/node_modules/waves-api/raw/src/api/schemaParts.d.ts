import { IPartialOptions } from 'ts-api-validator/src/interfaces';
import { IMoney } from '../classes/Money';
import { BasePart, BooleanPart, NumberPart, StringPart } from 'ts-api-validator';
export interface IMoneyPartOptions extends IPartialOptions<IMoney> {
    assetId: string;
}
export declare class MoneyPart extends BasePart<IPartialOptions<IMoney>> {
    protected options: IMoneyPartOptions;
    protected getValue(data: any): any;
}
declare const _default: {
    publicKey: {
        type: typeof StringPart;
        required: boolean;
    };
    assetId: {
        type: typeof StringPart;
        required: boolean;
    };
    fee: {
        type: typeof NumberPart;
        required: boolean;
        defaultValue: number;
    };
    issueFee: {
        type: typeof NumberPart;
        required: boolean;
        defaultValue: number;
    };
    recipient: {
        type: typeof StringPart;
        required: boolean;
        parseValue: (original: any) => any;
    };
    reissuable: {
        type: typeof BooleanPart;
        required: boolean;
        defaultValue: boolean;
    };
    timestamp: {
        type: typeof NumberPart;
        required: boolean;
        parseValue: (timestamp: any) => any;
    };
};
export default _default;
